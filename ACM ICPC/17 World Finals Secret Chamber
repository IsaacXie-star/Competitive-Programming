#include <iostream>
#include <string>
#include <sstream>
#include <cmath>
#include <bits/stdc++.h>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <typeinfo>
#include <stack>
#include <set>
#include <math.h>
#include <stdlib.h>
#include <cctype>
#include <queue>
#include <bitset>
//#include <array>
#include <stdio.h>
#include <map>

using namespace std;

typedef long long ll;

int m,n;

vector<int> G[26];

bool vis[26];

bool can(int a, int b)
{
    vis[a] = true;
    for(int i = 0; i<G[a].size(); i++)
    {
        if(!vis[G[a][i]])
        {
            vis[G[a][i]] = true;
            if(G[a][i] == b)
              {
                  return true;
              }
             else
             {
            if(can(G[a][i],b))
               {
                return true;
                }
             }
        }

    }
    return false;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cout.tie(NULL);
    cin>>n>>m;
    for(int i = 0; i<n; i++)
    {
        char a,b;
        cin>>a>>b;
        int xa,xb;
        xa = a-'a';
        xb = b-'a';
        G[xa].push_back(xb);
    }
    for(int i = 0; i<m; i++)
    {
        string a,b;
        cin>>a>>b;
        if(a.size() != b.size())
        {
            cout<<"no"<<endl;
            continue;
        }
        else
        {
            bool flag = true;
            for(int i = 0; i<a.size(); i++)
            {
                memset(vis, false, sizeof(vis));
                int xa,xb;

                xa = a[i] - 'a';
                xb = b[i] - 'a';
                if(xa == xb)
                {
                    continue;
                }
                if(!can(xa,xb))
                {
                    cout<<"no"<<endl;
                    flag = false;
                    break;
                }
            }
            if(flag)
            {
                cout<<"yes"<<endl;
            }
        }
    }


   return 0;
   }
