#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

typedef long long LL;

const int N = 10010, M = 11;

int n,m;
int cnt[1 << (2*M)];
int w[M][M];

int main()
{
    cin.tie(NULL);
    cout.tie(NULL);
    ios_base::sync_with_stdio(false);
    cin>>n>>m;
    LL ans = 0;
    while(m --)
    {
        for(int i = 1; i<=n; i++)
            for(int j = 1; j<=n; j++)
            {
                char x;
                cin>>x;
                if(x == 'W') w[i][j] = 0;
                else w[i][j] = 1;
            }
            
        for(int i = 1; i<n; i++)
            for(int j = 1; j<n; j++)
            {
                if(w[i][j] == 1) continue;
                else
                {
                    w[i][j] = 1;
                    w[i][j+1] = !w[i][j+1], w[i+1][j+1] = !w[i+1][j+1], w[i+1][j] = !w[i+1][j];
                }
            }
            
        int t = 0;
        for(int i = 1; i<=n; i++)
        {
            int x = (1 << (i-1));
            if(w[n][i] == 1) t += x;
        }
        for(int i = 1; i<n; i++)
        {
            int x = (1 << (n+i-1));
            if(w[i][n] == 1) t += x;
        }
        cnt[t]++;
    }
    
    for(int i = 0; i<(1 << 2*n); i++)
        ans += (LL)cnt[i] * (cnt[i]-1) / 2;
        
    cout<<ans<<endl;
    
    
    return 0;
}
