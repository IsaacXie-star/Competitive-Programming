#include <iostream>
#include <algorithm>
#include <cstring>
#include <unordered_map>

using namespace std;

typedef long long LL;

const int N = 100010;

unordered_map<int, int> mp;
int n;
int a[N], tr[N], b[N];

int lowbit(int x)
{
    return x & (-x);
}

void add(int x, int c)
{
    for(int i = x; i <= n; i += lowbit(i)) tr[i] += c;
}

LL sum(int x)
{
    LL res = 0;
    for(int i = x; i; i -= lowbit(i)) res += tr[i];
    return res;
}

int main()
{
    cin>>n;
    int idx = 0;
    for(int i = 1; i<=n; i++) cin>>a[i], b[i] = a[i];
    
    sort(b + 1, b + n + 1);
    for(int i = 1; i<=n; i++)
    {
        if(mp.find(b[i]) == mp.end())
        {
            mp[b[i]] = ++idx;
        }
    }
    LL total = 0;
    for(int i = 1 ; i<=n; i++)
    {
        int k = a[i];
        k = mp[k];
        total += (sum(n) - sum(k)) + 1;
        add(k, 1);
    }
    
    cout<<total / n <<"."<<(total * 100 / n) % 100<<endl;
    
    
    
    
    return 0;
}
