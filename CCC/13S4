#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>

using namespace std;

const int N = 1000010, M = 10000010;

int n,m;
int ne[M], e[M], h[M], idx;
bool vis[N];

void add(int a, int b)
{
    ne[idx] = h[a], e[idx] = b, h[a] = idx++; 
}

int dfs(int u, int v)
{
    for(int i = h[u]; i != -1; i = ne[i])
    {
        int j = e[i];
        if(j == v) return 1;
        if(!vis[j])
        {
            int t = dfs(j,v);
            if(t == 1) return 1;
        }
        vis[j] = true;
    }
    return 2;
}



int main()
{
    cin.tie(NULL);
    cout.tie(NULL);
    ios_base::sync_with_stdio(false);
    memset(h, -1, sizeof(h));
    cin>>n>>m;
    for(int i = 0; i<m; i++)
    {
        int a,b;
        cin>>a>>b;
        add(a,b);
    }
    int u,v;
    cin>>u>>v;
    int t1 = dfs(u,v);
    if(t1 == 1) cout<<"yes"<<endl;
    else if(t1 == 2)
    {
        int t2 = dfs(v,u);
        if(t2 == 1) cout<<"no"<<endl;
        else if(t2 == 2) cout<<"unknown"<<endl;
    }
    
    
    return 0;
}
