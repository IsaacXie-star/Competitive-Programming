#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <queue>

using namespace std;

typedef pair<int,int> PII;

const int N = 20;

int grid[N][N], a,b,c,d;
bool vis[N][N];

int dx[8] = {-2,-2,-1,-1,1,1,2,2}, dy[8] = {-1,1,-2,2,-2,2,-1,1};

void bfs()
{
    queue<PII> q;
    q.push({a,b});
    while(q.size())
    {
        PII s = q.front();
        q.pop();
        int xx = s.first, yy = s.second;
        vis[xx][yy] = true;
        for(int i = 0; i<8; i++)
        {
            int nx = xx+dx[i], ny = yy+dy[i];
            if(nx >= 1 && ny >= 1 && nx <= 8 && ny <= 8 && !vis[nx][ny])
            {
                grid[nx][ny] = grid[xx][yy] + 1;
                if(nx == c && ny == d) return;
                q.push({nx,ny});
            }
        }
    }
}

int main()
{
    cin>>a>>b>>c>>d;
    
    bfs();
    
    cout<<grid[c][d]<<endl;
    
    
    return 0;
}
